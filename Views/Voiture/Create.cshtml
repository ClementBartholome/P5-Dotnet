@model Express_Voitures.ViewModels.VoitureViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Ajouter une voiture</h1>

<h4>Voiture</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group required">
                <label asp-for="CodeVin" class="control-label"></label>
                <input asp-for="CodeVin" class="form-control"/>
                <span asp-validation-for="CodeVin" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Marque" class="control-label"></label>
                <select id="marqueSelect" asp-for="Marque" class="form-control" asp-items="ViewBag.Marques">
                    <option selected hidden value="">Sélectionnez une marque...</option>
                </select>
                <span asp-validation-for="Marque" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Modele" class="control-label"></label>
                <select id="modeleSelect" asp-for="Modele" class="form-control">
                    <option selected hidden>Sélectionnez un modèle...</option>
                </select>
                <span asp-validation-for="Modele" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Finition" class="control-label"></label>
                <select id="finitionSelect" asp-for="Finition" class="form-control">
                    <option selected hidden>Sélectionnez une finition...</option>
                </select>
                <span asp-validation-for="Finition" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="Annee" class="control-label"></label>
                <input asp-for="Annee" class="form-control"/>
                <span asp-validation-for="Annee" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="DateAchat" class="control-label"></label>
                <input asp-for="DateAchat" class="form-control"/>
                <span asp-validation-for="DateAchat" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="PrixAchat" class="control-label"></label>
                <input asp-for="PrixAchat" class="form-control"/>
                <span asp-validation-for="PrixAchat" class="text-danger"></span>
            </div>
            <div class="form-group form-check required">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Disponible"/> @Html.DisplayNameFor(model => model.Disponible)
                </label>
            </div>
            <div class="form-group required">
                <label asp-for="Reparations" class="control-label"></label>
                <input asp-for="Reparations" class="form-control"/>
                <span asp-validation-for="Reparations" class="text-danger"></span>
            </div>
            <div class="form-group required">
                <label asp-for="CoutReparations" class="control-label"></label>
                <input asp-for="CoutReparations" class="form-control"/>
                <span asp-validation-for="CoutReparations" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Retour à la liste</a>
</div>

@section Scripts {
<script>
document.addEventListener('DOMContentLoaded', function () {
    const modelesParMarque = @Html.Raw(Json.Serialize(ViewBag.ModelesParMarque));
    const finitionsParModele = @Html.Raw(Json.Serialize(ViewBag.FinitionsParModele));
    const marqueSelect = document.getElementById('marqueSelect');
    const modeleSelect = document.getElementById('modeleSelect');
    const finitionSelect = document.getElementById('finitionSelect');

    modeleSelect.disabled = true;
    finitionSelect.disabled = true;

    marqueSelect.addEventListener('change', function () {
        let marqueId = this.value;

        while (modeleSelect.firstChild) {
            modeleSelect.removeChild(modeleSelect.firstChild);
        }

        modeleSelect.disabled = !marqueId;

        if (marqueId) {
            let marqueModeles = modelesParMarque[marqueId].$values;

            marqueModeles.forEach(function (modele) {
                modeleSelect.appendChild(new Option(modele.text, modele.value));
            });
        }

        let modeleId = modeleSelect.value;

        while (finitionSelect.firstChild) {
            finitionSelect.removeChild(finitionSelect.firstChild);
        }

        finitionSelect.disabled = !modeleId;

        if (modeleId) {
            let modeleFinitions = finitionsParModele[modeleId].$values;

            modeleFinitions.forEach(function (finition) {
                finitionSelect.appendChild(new Option(finition.text, finition.value));
            });
        }
    });

    modeleSelect.addEventListener('change', function () {
        let modeleId = this.value;

        while (finitionSelect.firstChild) {
            finitionSelect.removeChild(finitionSelect.firstChild);
        }

        finitionSelect.disabled = !modeleId;

        if (modeleId) {
            let modeleFinitions = finitionsParModele[modeleId].$values;

            modeleFinitions.forEach(function (finition) {
                finitionSelect.appendChild(new Option(finition.text, finition.value));
            });
        }
    });
});</script>
}
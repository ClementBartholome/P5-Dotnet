@model X.PagedList.IPagedList<Express_Voitures.ViewModels.AnnonceViewModel>
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Index";
}

<div class="container-sm">

    <section class="d-flex align-items-center gap-3">
        <h2 class="me-4">Nos annonces</h2>
        @if (User.HasClaim("Admin", "true"))
        {
            <p class="button">
                <i class="bi bi-plus"></i>
                <a asp-action="Create">Ajouter une annonce</a>
            </p>
        }
    </section>

    @if (Model.Any())
    {
        <section class="d-flex flex-wrap justify-content-start gap-4 mt-3 mb-3">
            @foreach (var item in Model)
            {
                <div class="card" style="width: 20rem;">
                    <img class="card-img-top h-100" src="@item.PhotoFilePath" alt="Image de l'annonce" style="object-fit: cover !important;">
                    <div class="card-body">
                        <h5 class="card-title body-highlight">@Html.DisplayFor(modelItem => item.VoitureMarque) @Html.DisplayFor(modelItem => item.VoitureModele)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.VoitureAnnee)</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    </div>
                    <hr/>
                    <p class="py-2 px-3 body-highlight">@Html.DisplayFor(modelItem => item.VoiturePrixFormatted)€</p>
                    @if (User.HasClaim("Admin", "true"))
                    {
                        <div class="p-3 d-flex justify-content-between">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success">
                                <i class="bi bi-pencil-square" style="color:white;"></i>
                            </a>
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@item.Id">
                                <i class="bi bi-trash" style="color:white;"></i>
                            </button>
                            <form id="deleteForm-@item.Id" asp-action="Delete" asp-route-id="@item.Id" method="post" style="display: none;"></form>
                        </div>
                    }
                </div>
            }
        </section>

        <div class="m-auto">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToIndividualPages = true,
                MaximumPageNumbersToDisplay = 5,
                DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                LinkToIndividualPageFormat = "{0}",
                EllipsesFormat = "...",
            })
        </div>

    } else
    {
        <p>Aucune annonce n'est actuellement en ligne.</p>
    }

</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmation de suppression</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Voulez-vous vraiment supprimer cet élément ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Non</button>
                <a id="deleteConfirm" class="btn btn-primary">Oui</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            let pagination = document.querySelector('.pagination');
            pagination.classList.add('justify-content-center');

            let paginationLinks = document.querySelectorAll('.pagination a');
            paginationLinks.forEach((link) => {
                link.classList.add('page-link');
            });

            let paginationSpans = document.querySelectorAll('.pagination span');
            paginationSpans.forEach((span) => {
                span.classList.add('page-link');
            });

            let currentPage = @Model.PageNumber;
            paginationLinks.forEach((link) => {
                if (link.textContent == currentPage) {
                    link.parentElement.classList.add('active');
                }
            });
        });

        const deleteButtons = document.querySelectorAll('.btn-danger');
        deleteButtons.forEach((btn) => {
            btn.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const deleteConfirmButton = document.getElementById('deleteConfirm');
                deleteConfirmButton.addEventListener('click', function() {
                    document.getElementById('deleteForm-' + id).submit();
                });
            });
        });
    </script>
}